{"ast":null,"code":"const express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst cors = require('cors');\n\nconst mongo = require('mongodb');\n\nconst key = require('./key').mongoURI;\n\nlet dbo;\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors());\nmongo.connect(key, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}, (err, client) => {\n  if (err) throw err;\n  dbo = client.db(\"test\");\n  console.log(\"DB Connected\");\n});\napp.get('/envs', (req, res) => {\n  dbo.collection('envs').find().toArray((err, data) => {\n    console.log(data);\n    res.send(data);\n  });\n});\napp.post('/envs', function (req, res) {\n  var myobj = {\n    \"project\": {\n      \"app\": {\n        \"key\": \"1234\"\n      }\n    }\n  };\n  dbo.collection('envs').insertOne(myobj, function (err, obj) {\n    if (err) throw err;\n    console.log(\"inserted\");\n    res.send('Successs');\n  });\n});\napp.delete('/envs', function (req, res) {\n  var myquery = {\n    \"project.app.key\": \"123\"\n  };\n  dbo.collection('envs').deleteOne(myquery, function (err, obj) {\n    if (err) throw err;\n    console.log(\"deleted\");\n    res.send('deleted');\n  });\n});\napp.put('/envs', function (req, res) {\n  var myquery = {\n    \"project.app.key\": \"1234\"\n  };\n  var newvalues = {\n    $set: {\n      \"project.app.key\": \"123\"\n    }\n  };\n  dbo.collection('envs').updateOne(myquery, newvalues, function (err, obj) {\n    if (err) throw err;\n    console.log(\"updated\");\n    res.send('update');\n  });\n});\napp.listen(3000, 'localhost', () => console.log('Running'));","map":{"version":3,"sources":["F:/reactapp/react-apps/src/server.js"],"names":["express","require","bodyParser","cors","mongo","key","mongoURI","dbo","app","use","json","connect","useNewUrlParser","useUnifiedTopology","err","client","db","console","log","get","req","res","collection","find","toArray","data","send","post","myobj","insertOne","obj","delete","myquery","deleteOne","put","newvalues","$set","updateOne","listen"],"mappings":"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","sourcesContent":["const express = require('express')\r\nconst bodyParser = require('body-parser')\r\nconst cors = require('cors')\r\nconst mongo = require('mongodb')\r\nconst key = require('./key').mongoURI\r\n\r\nlet dbo\r\nconst app = express()\r\n\r\napp.use(bodyParser.json())\r\napp.use(cors())\r\nmongo.connect(key, { useNewUrlParser: true, useUnifiedTopology: true }, (err, client) => {\r\n    if (err) throw err;\r\n    dbo = client.db(\"test\")\r\n    console.log(\"DB Connected\")\r\n});\r\n\r\napp.get('/envs', (req, res) => {\r\n    dbo.collection('envs').find().toArray( (err, data) => {\r\n        console.log(data)\r\n        res.send(data)\r\n    })\r\n  })\r\n\r\n  app.post('/envs', function (req, res) { \r\n      \r\n    var myobj = { \r\n        \"project\":{\r\n            \"app\":{\r\n               \"key\":\"1234\"\r\n             }\r\n            }\r\n        }\r\n      dbo.collection('envs').insertOne(myobj, function(err, obj) {\r\n      if (err) throw err;\r\n      console.log(\"inserted\");\r\n      res.send('Successs');\r\n    });\r\n });    \r\n\r\n app.delete('/envs', function (req, res) {  \r\n\r\nvar myquery =   {\"project.app.key\" : \"123\"}\r\n  \r\ndbo.collection('envs').deleteOne(myquery, function(err, obj) {\r\n        if (err) throw err;\r\n        console.log(\"deleted\");\r\n        res.send('deleted');  \r\n    });\r\n    });\r\n\r\n app.put('/envs', function (req, res) {  \r\n\r\n    var myquery = { \"project.app.key\" : \"1234\" };\r\n    var newvalues = { $set: {\"project.app.key\": \"123\"} };\r\n  \r\n    dbo.collection('envs').updateOne(myquery, newvalues, function(err, obj) {\r\n        if (err) throw err;\r\n        console.log(\"updated\");\r\n        res.send('update');  \r\n\r\n      });\r\n }) ;\r\n\r\n\r\n  app.listen(3000, 'localhost', () => console.log('Running'))"]},"metadata":{},"sourceType":"module"}