{"ast":null,"code":"var _jsxFileName = \"F:\\\\reactapp\\\\react-apps\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './key';\n\nconst express = require('express');\n\nconst bodyParser = require('body-parser');\n\nconst cors = require('cors');\n\nconst mongo = require('mongodb');\n\nconst key = require('./key').mongoURI;\n\nlet dbo;\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors());\nmongo.connect(key, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}, (err, client) => {\n  if (err) throw err;\n  dbo = client.db(\"test\");\n  console.log(\"DB Connected\");\n});\napp.get('/envs', (req, res) => {\n  dbo.collection('envs').find().toArray((err, data) => {\n    console.log(data);\n    res.send(data);\n  });\n});\napp.post('/envs', function (req, res) {\n  var myobj = {\n    \"project\": {\n      \"app\": {\n        \"key\": \"1234\"\n      }\n    }\n  };\n  dbo.collection('envs').insertOne(myobj, function (err, obj) {\n    if (err) throw err;\n    console.log(\"inserted\");\n    res.send('Successs');\n  });\n});\napp.delete('/envs', function (req, res) {\n  var myquery = {\n    \"project.app.key\": \"123\"\n  };\n  dbo.collection('envs').deleteOne(myquery, function (err, obj) {\n    if (err) throw err;\n    console.log(\"deleted\");\n    res.send('deleted');\n  });\n});\napp.put('/envs', function (req, res) {\n  var myquery = {\n    \"project.app.key\": \"1234\"\n  };\n  var newvalues = {\n    $set: {\n      \"project.app.key\": \"123\"\n    }\n  };\n  dbo.collection('envs').updateOne(myquery, newvalues, function (err, obj) {\n    if (err) throw err;\n    console.log(\"updated\");\n    res.send('update');\n  });\n});\napp.listen(3000, 'localhost', () => console.log('Running'));\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["F:/reactapp/react-apps/src/index.js"],"names":["React","ReactDOM","App","registerServiceWorker","express","require","bodyParser","cors","mongo","key","mongoURI","dbo","app","use","json","connect","useNewUrlParser","useUnifiedTopology","err","client","db","console","log","get","req","res","collection","find","toArray","data","send","post","myobj","insertOne","obj","delete","myquery","deleteOne","put","newvalues","$set","updateOne","listen","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './key';\n\n\nconst express = require('express')\nconst bodyParser = require('body-parser')\nconst cors = require('cors')\nconst mongo = require('mongodb')\nconst key = require('./key').mongoURI\n\nlet dbo\nconst app = express()\n\napp.use(bodyParser.json())\napp.use(cors())\nmongo.connect(key, { useNewUrlParser: true, useUnifiedTopology: true }, (err, client) => {\n    if (err) throw err;\n    dbo = client.db(\"test\")\n    console.log(\"DB Connected\")\n});\n\napp.get('/envs', (req, res) => {\n    dbo.collection('envs').find().toArray( (err, data) => {\n        console.log(data)\n        res.send(data)\n    })\n  })\n\n  app.post('/envs', function (req, res) { \n      \n    var myobj = { \n        \"project\":{\n            \"app\":{\n               \"key\":\"1234\"\n             }\n            }\n        }\n      dbo.collection('envs').insertOne(myobj, function(err, obj) {\n      if (err) throw err;\n      console.log(\"inserted\");\n      res.send('Successs');\n    });\n });    \n\n app.delete('/envs', function (req, res) {  \n\nvar myquery =   {\"project.app.key\" : \"123\"}\n  \ndbo.collection('envs').deleteOne(myquery, function(err, obj) {\n        if (err) throw err;\n        console.log(\"deleted\");\n        res.send('deleted');  \n    });\n    });\n\n app.put('/envs', function (req, res) {  \n\n    var myquery = { \"project.app.key\" : \"1234\" };\n    var newvalues = { $set: {\"project.app.key\": \"123\"} };\n  \n    dbo.collection('envs').updateOne(myquery, newvalues, function(err, obj) {\n        if (err) throw err;\n        console.log(\"updated\");\n        res.send('update');  \n\n      });\n }) ;\n\n\n  app.listen(3000, 'localhost', () => console.log('Running'))\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}